# Секция events отвечает за конфигурацию событий на уровне рабочей обработки запросов
events {
  # Определяет максимальное количество одновременных соединений для каждого рабочего процесса
  worker_connections 1024;

  # Здесь также можно указать метод обработки событий (например, epoll для Linux),
  # но по умолчанию Nginx сам выбирает наиболее подходящий метод для вашей системы.
}

# Секция http, которая содержит конфигурацию для HTTP-сервера
http {
  # Секция server определяет конфигурацию виртуального хоста, связанного с определенным портом
  server {
    # Прослушиваем порт 80 (стандартный порт HTTP)
    listen 80;

    # Обработка запросов к корневому URL "/"
    location / {
      # Указываем корневую директорию для файлов, которые Nginx будет обслуживать
      root /usr/share/nginx/html/browser;
      # Файл, который будет возвращен, если запрос идет к корню
      index index.html;
      # Если запрошенный файл не найден, пытаемся найти его с добавлением "/",
      # если и это не помогает, то возвращаем "index.html" (для поддержки маршрутизации в одностраничных приложениях)
      try_files $uri $uri/ /index.html;
    }

    # Обработка файлов JavaScript и CSS
    location ~ \.(js|css)$ {
      # Указываем ту же корневую директорию
      root /usr/share/nginx/html/browser;
      # Включаем файл с определениями MIME-типов
      include /etc/nginx/mime.types;
    }

    # Обработка всех других запросов, которые начинаются с "/" и содержат один или более символов
    # Это полезно для маршрутизации в одностраничных приложениях (SPA), где путь на стороне клиента
    location ~ ^/.+$ {
      # Указываем ту же корневую директорию
      root /usr/share/nginx/html/browser;
      # Индексный файл, который будет возвращен, если ничего другого не найдено
      index index.html;
      # Если запрошенный файл не найден, возвращаем "index.html" для поддержания работы SPA
      try_files $uri /index.html;
    }

    # Блок location для обслуживания фавикона
    location = /favicon.ico {
      root /usr/share/nginx/html/browser; # Путь к директории, где находится ваш фавикон
      access_log off; # Отключить ведение журнала для этой локации
      log_not_found off; # Отключить ведение журнала для не найденных запросов к этой локации
    }

    # Backend reverse proxy
    location /api {
      proxy_pass http://localhost:9090;  # Используем имя контейнера `bsn-api`
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;  # Исправлена опечатка
    }
  }
}
